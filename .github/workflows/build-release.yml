
name: Build Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version Number ('0.x.y')"
        required: true

permissions:
  contents: write

jobs:
  build_binaries:
    name: "Build eth-beacon-genesis"
    uses: ./.github/workflows/_shared-build.yaml
    with:
      ref: ${{ github.sha }}
      release: "v${{ inputs.version }}"
      docker: true
      docker_repository: "ethpandaops/eth-beacon-genesis"
      docker_tag_prefix: "v${{ inputs.version }}"
      additional_tags: "['v${{ inputs.version }}','latest']"
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  
  create_release:
    name: Create Release
    needs: [build_binaries]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
      with:
        fetch-depth: 100
        ref: ${{ github.sha }}
    - name: "Generate release changelog"
      id: changelog
      run: |
        git fetch --tags
        prev_tag=$(git tag --sort=-version:refname | grep -e "^v[0-9.]*$" | head -n 1)
        echo "previous release: $prev_tag"
        if [ "$prev_tag" ]; then
          changelog=$(git log --oneline --no-decorate $prev_tag..HEAD)
        else
          changelog=$(git log --oneline --no-decorate)
        fi
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        echo " - ${changelog//$'\n'/$'\n' - }" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    # download build artifacts
    - name: "Download build artifacts"
      uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4

    # create draft release
    - name: Create latest release
      uses: actions/create-release@0cb9c9b65d5d1901c1f53e5e66eaf4afd303e70e # v1
      id: create_release
      with:
        draft: true
        prerelease: false
        release_name: "v${{ inputs.version }}"
        tag_name: "v${{ inputs.version }}"
        body: |
          ### Changes
          ${{ steps.changelog.outputs.changelog }}

          ### Release Artifacts
          | Release File  | Description |
          | ------------- | ------------- |
          | [eth-beacon-genesis_${{ inputs.version }}_windows_amd64.zip](https://github.com/ethpandaops/eth-beacon-genesis/releases/download/v${{ inputs.version }}/eth-beacon-genesis_${{ inputs.version }}_windows_amd64.zip) | eth-beacon-genesis executables for windows/amd64 |
          | [eth-beacon-genesis_${{ inputs.version }}_linux_amd64.tar.gz](https://github.com/ethpandaops/eth-beacon-genesis/releases/download/v${{ inputs.version }}/eth-beacon-genesis_${{ inputs.version }}_linux_amd64.tar.gz) | eth-beacon-genesis executables for linux/amd64 |
          | [eth-beacon-genesis_${{ inputs.version }}_linux_arm64.tar.gz](https://github.com/ethpandaops/eth-beacon-genesis/releases/download/v${{ inputs.version }}/eth-beacon-genesis_${{ inputs.version }}_linux_arm64.tar.gz) | eth-beacon-genesis executables for linux/arm64 |
          | [eth-beacon-genesis_${{ inputs.version }}_darwin_amd64.tar.gz](https://github.com/ethpandaops/eth-beacon-genesis/releases/download/v${{ inputs.version }}/eth-beacon-genesis_${{ inputs.version }}_darwin_amd64.tar.gz) | eth-beacon-genesis executable for macos/amd64 |
          | [eth-beacon-genesis_${{ inputs.version }}_darwin_arm64.tar.gz](https://github.com/ethpandaops/eth-beacon-genesis/releases/download/v${{ inputs.version }}/eth-beacon-genesis_${{ inputs.version }}_darwin_arm64.tar.gz) | eth-beacon-genesis executable for macos/arm64 |
      env:
        GITHUB_TOKEN: ${{ github.token }}

    # generate & upload release artifacts
    - name: "Generate release package: eth-beacon-genesis_${{ inputs.version }}_windows_amd64.zip"
      run: |
        cd eth-beacon-genesis_windows_amd64
        zip -r -q ../eth-beacon-genesis_${{ inputs.version }}_windows_amd64.zip .
    - name: "Upload release artifact: eth-beacon-genesis_${{ inputs.version }}_windows_amd64.zip"
      uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5 # v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./eth-beacon-genesis_${{ inputs.version }}_windows_amd64.zip
        asset_name: eth-beacon-genesis_${{ inputs.version }}_windows_amd64.zip
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ github.token }}
    
    - name: "Generate release package: eth-beacon-genesis_${{ inputs.version }}_linux_amd64.tar.gz"
      run: |
        cd eth-beacon-genesis_linux_amd64
        tar -czf ../eth-beacon-genesis_${{ inputs.version }}_linux_amd64.tar.gz .
    - name: "Upload release artifact: eth-beacon-genesis_${{ inputs.version }}_linux_amd64.tar.gz"
      uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5 # v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./eth-beacon-genesis_${{ inputs.version }}_linux_amd64.tar.gz
        asset_name: eth-beacon-genesis_${{ inputs.version }}_linux_amd64.tar.gz
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ github.token }}
    
    - name: "Generate release package: eth-beacon-genesis_${{ inputs.version }}_linux_arm64.tar.gz"
      run: |
        cd eth-beacon-genesis_linux_arm64
        tar -czf ../eth-beacon-genesis_${{ inputs.version }}_linux_arm64.tar.gz .
    - name: "Upload release artifact: eth-beacon-genesis_${{ inputs.version }}_linux_arm64.tar.gz"
      uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5 # v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./eth-beacon-genesis_${{ inputs.version }}_linux_arm64.tar.gz
        asset_name: eth-beacon-genesis_${{ inputs.version }}_linux_arm64.tar.gz
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ github.token }}
    
    - name: "Generate release package: eth-beacon-genesis_${{ inputs.version }}_darwin_amd64.tar.gz"
      run: |
        cd eth-beacon-genesis_darwin_amd64
        tar -czf ../eth-beacon-genesis_${{ inputs.version }}_darwin_amd64.tar.gz .
    - name: "Upload release artifact: eth-beacon-genesis_${{ inputs.version }}_darwin_amd64.tar.gz"
      uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5 # v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./eth-beacon-genesis_${{ inputs.version }}_darwin_amd64.tar.gz
        asset_name: eth-beacon-genesis_${{ inputs.version }}_darwin_amd64.tar.gz
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: "Generate release package: eth-beacon-genesis_${{ inputs.version }}_darwin_arm64.tar.gz"
      run: |
        cd eth-beacon-genesis_darwin_arm64
        tar -czf ../eth-beacon-genesis_${{ inputs.version }}_darwin_arm64.tar.gz .
    - name: "Upload release artifact: eth-beacon-genesis_${{ inputs.version }}_darwin_arm64.tar.gz"
      uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5 # v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./eth-beacon-genesis_${{ inputs.version }}_darwin_arm64.tar.gz
        asset_name: eth-beacon-genesis_${{ inputs.version }}_darwin_arm64.tar.gz
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ github.token }}
